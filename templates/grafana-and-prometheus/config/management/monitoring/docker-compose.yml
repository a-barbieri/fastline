version: '3.2'

networks:
  frontend:
    external:
      name: lacolonia-proxy-net 
  backend: 
  

services:

  ################################################################
  # Prometheus 
  #  - runs on manager node
  ################################################################
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    deploy:
      labels:
        # Explicitly tell Traefik to expose this container
        - "traefik.enable=true"
        # Get the routes from prometheus
        - "traefik.http.routers.management_monitoring_prometheus.rule=Host(`%%SERVER_DOMAIN%%`)"
        - "traefik.http.routers.management_monitoring_prometheus.entrypoints=prometheus"
        # Redirect these routes to https
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.routers.management_monitoring_prometheus.middlewares=redirect-to-https"
        # Get the routes from prometheus-secure
        - "traefik.http.routers.management_monitoring_prometheus-secure.rule=Host(`%%SERVER_DOMAIN%%`)"
        - "traefik.http.routers.management_monitoring_prometheus-secure.entrypoints=prometheus"
        - "traefik.http.routers.management_monitoring_prometheus-secure.tls=true"
        - "traefik.http.routers.management_monitoring_prometheus-secure.tls.certresolver=myresolver"
        # Specify the port to use for communication
        - "traefik.http.services.management_monitoring_prometheus.loadbalancer.server.port=9090"
      placement:
        constraints:
          - node.role == manager
    networks:
      - frontend
      - backend     


  ################################################################
  # The promethes node-exporter 
  # For each node a separte service need to be added 
  ################################################################
  # START NODE-EXPORTERS.....
  manager-001:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    deploy:
      placement:
        constraints:
         # Hostname of the manager node!
         - node.hostname == %%MANAGER_NODE_HOSTNAME%%
    networks:
      - backend

  ################################################################
  # END NODE-EXPORTERS.....
  ################################################################
      
      



  ################################################################
  # cAdvisor
  #   - runs on every node
  ################################################################
  # START CADVISORS.....
  docker-manager-001:
    image: google/cadvisor:latest
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      placement:
        constraints:
         # Hostname of the first manager node!
          - node.hostname == %%MANAGER_NODE_HOSTNAME%%
    networks:
      - backend

  ################################################################
  # END CADVISORS.....
  ################################################################






     
  ################################################################
  # Grafana
  #  - runs on manager node
  ################################################################
  grafana:
    image: grafana/grafana
    #environment:
    #  GF_SMTP_ENABLED: "true"
    #  GF_SMTP_HOST: "mailgateway:25"
    #  GF_SMTP_FROM_ADDRESS: "alert@myhost.com"
    volumes: 
      - grafana-data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    deploy:
      labels:
        # Explicitly tell Traefik to expose this container
        - "traefik.enable=true"
        # Get the routes from http
        - "traefik.http.routers.management_monitoring_grafana.rule=Host(`%%SERVER_DOMAIN%%`)"
        - "traefik.http.routers.management_monitoring_grafana.entrypoints=web"
        # Redirect these routes to https
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.routers.management_monitoring_grafana.middlewares=redirect-to-https"
        # Get the routes from https
        - "traefik.http.routers.management_monitoring_grafana-secure.rule=Host(`%%SERVER_DOMAIN%%`)"
        - "traefik.http.routers.management_monitoring_grafana-secure.entrypoints=websecure"
        - "traefik.http.routers.management_monitoring_grafana-secure.tls=true"
        - "traefik.http.routers.management_monitoring_grafana-secure.tls.certresolver=myresolver"
        # Specify the port to use for communication
        - "traefik.http.services.whoami_app.loadbalancer.server.port=3000"
      placement:
        constraints:
          - node.role == manager
    networks:
      - frontend
      - backend

volumes:
  grafana-data:



